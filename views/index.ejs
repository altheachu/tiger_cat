<%-include("partials/header.ejs")%>

<div class="container text-center">
  <div class="custom_layout">
    <div class="bg-info">
      <div class="btn_add">
        <button class="btn btn-primary">Add</button>
      </div>
      <nav class="list_custom">
        <ul class="list-unstyled">
          <%if(locals.articles){%>
            <%for (let i = 0; i < articles.length; i++){ %>
              <li><a><%=articles[i].title%></a></li>
            <%}%>
          <%}%>
        </ul>  
      </nav>
    </div>
    <div>
      <main>
        <a id="top"></a>
        <%if(locals.articles){%>
          <%for (let i = 0; i < articles.length; i++){ %>
            <div class="article_container">
              <form>
                <!--index hide display-->
                <div class="article_index">
                  <%=articles[i].index%>
                </div>
                <div class="article_title">
                <%=articles[i].title%>
                </div>
                <div class="article_content" >
                  <div class="article_readonly">
                  <%=articles[i].content%>
                  </div>
                  <div class="artitle_edit">
                    <textarea class="article_textarea">
                      <%=articles[i].content%>
                    </textarea>
                  </div>
                </div>
                <div class="article_amend">
                  <a href="#top">Top</a> 
                  <button class="btn btn-primary">Edit</button>
                  <button class="btn btn-success">Save</button>
                  <button class="btn btn-danger">Delete</button>
                </div>
              </form>
            </div>
          <%}%>
        <%}%>
      </main>
    </div>
  </div>
</div>

<%-include("partials/footer.ejs")%>

<script>
  const titles = document.getElementsByClassName("list-unstyled")[0].children;
  for (let i = 0; i < titles.length; i++){
    let tag = document.getElementsByClassName("list-unstyled")[0].children[i].children[0];
    tag.name = "item";
    tag.href = "#" + tag.innerHTML.toLowerCase();
  }

  const artitle_titles = document.getElementsByClassName("article_title");
  for (let i = 0; i < artitle_titles.length; i++){
    let article_title_tag = document.getElementsByClassName("article_title")[i];
    article_title_tag.id = document.getElementsByClassName("article_title")[i].innerText.toLowerCase();
  }
  
  const article_form = document.getElementsByTagName("form");
  const article_readonly = document.getElementsByClassName("article_readonly");
  const artitle_edit = document.getElementsByClassName("artitle_edit");
  let preInnerHTML = '';
  let nowInnerHTML = '';
  for (let i = 0; i < article_form.length; i++){
    document.getElementsByTagName("form")[i].addEventListener("submit", function(evnet){
      let button_click = evnet.submitter.getAttribute("class");
      if (button_click.includes("btn-primary")){
        preInnerHTML = document.getElementsByClassName("artitle_edit")[i].childNodes[1].value;
        article_readonly[i].style.display = "none";
        artitle_edit[i].style.display = "block";
      } else if (button_click.includes("btn-success")){
        event.preventDefault();
        let file_no = article_form[i].children[0].innerHTML.trim();
        nowInnerHTML = document.getElementsByClassName("artitle_edit")[i].childNodes[1].value;
        if(preInnerHTML===nowInnerHTML){
          article_readonly[i].removeAttribute("style");
          artitle_edit[i].removeAttribute("style");
          return;
        } else {
          save(file_no, nowInnerHTML);
          article_readonly[i].removeAttribute("style");
          artitle_edit[i].removeAttribute("style");
        }
      } else if (button_click.includes("btn-danger")){
        let file_no = article_form[i].children[0].innerHTML.trim();
        del(file_no);
      }
    });
  }

  function save(file_no, textareaContent) {
    const data = {
        fileNo: file_no, 
        content: textareaContent
    };
    let xhr = new XMLHttpRequest();
    xhr.open('POST', '/save', true);
    xhr.setRequestHeader('Content-Type', 'application/json');
    xhr.onreadystatechange = function() {
      if (xhr.readyState === 4 && xhr.status === 200) {
        console.log('request success');
        console.log(xhr.responseText);
      }
    };
    xhr.send(JSON.stringify(data));
  }

  function del(file_no){
    const data = {
        fileNo: file_no, 
    };
    let xhr = new XMLHttpRequest();
    xhr.open('POST', '/delete', true);
    xhr.setRequestHeader('Content-Type', 'application/json');
    xhr.onreadystatechange = function() {
      if (xhr.readyState === 4 && xhr.status === 200) {
        console.log('request success');
        console.log(xhr.responseText);
      }
    };
    xhr.send(JSON.stringify(data));
  }
</script>