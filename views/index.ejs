<%-include("partials/header.ejs")%>

<div class="container text-center">
  <div class="custom_layout">
    <div class="bg-info">
      <div class="btn_add">
        <button data-open-modal class="btn btn-primary">Add</button>
      </div>
      <nav class="list_custom">
        <ul class="list-unstyled">
          <%if(locals.articles){%>
            <%for (let i = 0; i < articles.length; i++){ %>
              <li><a><%=articles[i].title%></a></li>
            <%}%>
          <%}%>
        </ul>  
      </nav>
    </div>
    <div>
      <main>
        <a id="top"></a>
        <%if(locals.articles){%>
          <%for (let i = 0; i < articles.length; i++){ %>
            <div class="article_container">
              <form class="article_form">
                <!--index hide display-->
                <div class="article_index">
                  <%=articles[i].index%>
                </div>
                <div class="article_title">
                  <%=articles[i].title%>
                </div>
                <div class="article_content" >
                  <div class="article_readonly">
                    <%=articles[i].content%>
                  </div>
                  <div class="artitle_edit">
                    <textarea class="article_textarea">
                      <%=articles[i].content%>
                    </textarea>
                  </div>
                </div>
                <div class="article_amend">
                  <a href="#top">Top</a> 
                  <button class="btn btn-primary">Edit</button>
                  <button class="btn btn-success">Save</button>
                  <button class="btn btn-danger">Delete</button>
                </div>
              </form>
            </div>
          <%}%>
        <%}%>
      </main>
    </div>
  </div>
  <div class="add-modal-container">
    <div class="add-modal">
      <form class="create_article_form">
        <div class="add-format">
          <div class ="modal-line">
            <label>Title</label>
            <input id = "create-title" placeholder="please enter title here" value="test"/>
          </div>
          <div class ="modal-line">
            <label>Content</label>
            <textarea id="create-content">Write down your thoughts</textarea>
          </div>
          <div class ="modal-button">
            <button class="btn btn-custom-font btn-cancel">Cancel</button>
            <button class="btn btn-custom-font btn-info btn-create">Confirm</button>
          </div>
        </div>
      </form>
    </div>
  </div>
  <div class="loading-modal-container">
    <div class="loading-modal">
      <div>Processing...</div>
    </div>
  </div>
</div>

<%-include("partials/footer.ejs")%>

<script>

  const modal = document.querySelector('.add-modal-container');
  const openBtn = document.querySelectorAll('*[data-open-modal]');
  openBtn.forEach(node => {
    node.addEventListener('click', () => {
      fadeIn(modal, 'flex');
      blockScroll();
    });
  });

  const createForm = document.querySelector(".create_article_form");
  createForm.addEventListener("submit", function(event){
    event.preventDefault();
    const btnType = event.submitter.getAttribute("class");
    if(btnType.includes("btn-cancel")){
      fadeOut(modal);
      unblockScroll();
    } else if (btnType.includes("btn-create")){
      const createTitle = document.querySelector("#create-title").value;
      const createContent = document.querySelector("#create-content").value;
      console.log(createTitle, createContent);
    }
  });

  const titles = document.querySelectorAll(".list-unstyled")[0].children;
  for (let i = 0; i < titles.length; i++){
    let tag = document.querySelectorAll(".list-unstyled")[0].children[i].children[0];
    tag.name = "item";
    tag.href = "#" + tag.innerHTML.toLowerCase();
  }

  const artitle_titles = document.querySelectorAll(".article_title");
  for (let i = 0; i < artitle_titles.length; i++){
    let article_title_tag = document.querySelectorAll(".article_title")[i];
    article_title_tag.id = document.querySelectorAll(".article_title")[i].innerText.toLowerCase();
  }
  
  const article_form = document.querySelectorAll(".article_form");
  const article_readonly = document.querySelectorAll(".article_readonly");
  const artitle_edit = document.querySelectorAll(".artitle_edit");
  let preInnerHTML = "";
  let nowInnerHTML = "";
  for (let i = 0; i < article_form.length; i++){
    document.querySelectorAll(".article_form")[i].addEventListener("submit", function(event){
      let button_click = event.submitter.getAttribute("class");
      if (button_click.includes("btn-primary")){
        event.preventDefault();
        preInnerHTML = document.querySelectorAll(".artitle_edit")[i].childNodes[1].value;
        article_readonly[i].style.display = "none";
        artitle_edit[i].style.display = "block";
      } else if (button_click.includes("btn-success")){
        event.preventDefault();
        let file_no = article_form[i].children[0].innerHTML.trim();
        nowInnerHTML = document.querySelectorAll(".artitle_edit")[i].childNodes[1].value;
        if(preInnerHTML===nowInnerHTML){
          article_readonly[i].removeAttribute("style");
          artitle_edit[i].removeAttribute("style");
          return;
        } else {
          save(file_no, nowInnerHTML);
          article_readonly[i].removeAttribute("style");
          artitle_edit[i].removeAttribute("style");
        }
      } else if (button_click.includes("btn-danger")){
        let file_no = article_form[i].children[0].innerHTML.trim();
        del(file_no);
      }
    });
  }

  function save(file_no, textareaContent) {
    const modal = document.querySelector('.loading-modal-container');
    fadeIn(modal,'flex');
    const data = {
        fileNo: file_no, 
        content: textareaContent
    };
    let xhr = new XMLHttpRequest();
    xhr.open("POST", "/save", true);
    xhr.setRequestHeader("Content-Type", "application/json");
    xhr.onreadystatechange = async () => {
      if (xhr.readyState === 4 && xhr.status === 200) {
        console.log("request success");
          // console.log(xhr.responseText);
        console.log("save done"); 
        await reloadPage();
        fadeOut(modal);
      }
    };
    xhr.send(JSON.stringify(data));
  }

  function del(file_no){
    let yes = confirm("確定刪除嗎？");
    if (yes) {
      const modal = document.querySelector('.loading-modal-container');
      fadeIn(modal,'flex');
      const data = {
        fileNo: file_no, 
      };
      let xhr = new XMLHttpRequest();
      xhr.open("POST", "/delete", true);
      xhr.setRequestHeader("Content-Type", "application/json");
      xhr.onreadystatechange = async () => {
        if (xhr.readyState === 4 && xhr.status === 200) {
          console.log("request success");
          await reloadPage();
          fadeOut(modal);
        }
      };
      xhr.send(JSON.stringify(data));
    } 
  }

  function fadeIn (el, display="inline-block", duration=400) {
    el.style.opacity = el.style.opacity || 0;
    el.style.display = display;
    el.style.visibility = "visible";

    let opacity = parseFloat(el.style.opacity) || 0;
    const timer = setInterval( function() {
      opacity += 50 / duration;
      if( opacity >= 1 ) {
        clearInterval(timer);
        opacity = 1;
      }
      el.style.opacity = opacity;
    }, 40 );
  }; 

  function blockScroll() {
    document.body.style.overflow = 'hidden';
  }

  function fadeOut(el, duration=400) {
    let opacity = 1;
    const timer = setInterval( function() {
      opacity -= 50 / duration;
      if(opacity <= 0) {
        clearInterval(timer);
        opacity = 0;
        el.style.display = "none";
        el.style.visibility = "hidden";
      }
      el.style.opacity = opacity;
    }, 40);
  };
  
  function unblockScroll() {
    document.body.style.overflow = null;
  }

  async function reloadPage() {
    return new Promise(resolve => {
        location.reload(true); 
        window.onload = resolve; 
    });
  }
</script>